spring.application.name=pixelart

server.port=4002

spring.datasource.url=jdbc:
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
ai.image.api.url=https://api.openai.com/v1/images/generations
ai.image.api.key=
ai.image.system.prompt=Generate pixel art in strict 8-bit/16-bit retro video game style. Use [16x16] or [32x32] resolution (must be divisible by 8). Strict limited color palette: max 16 colors (use dithering if needed, reference NES/Game Boy palettes). Style: low-res, no anti-aliasing, sharp edges, high contrast, indexed colors only. Prioritize clarity and readability for functional sprites/game assets. Avoid gradients, shadows, modern effects, and complex details. If user mentions 'sprite sheet', generate grid layout (e.g., 4x4 tiles) with perfect alignment, transparency (PNG alpha channel), and consistent scaling. For animations, include 4-8 frames with pixel-perfect movement loops. Theme/subject: {user_input}. Examples: [platformer character (idle/jump/run), RPG item icons, top-down terrain tiles, arcade enemy with attack animation].
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
logging.level.org.hibernate.SQL=DEBUG
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
